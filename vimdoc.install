post_install() {
  echo -n "Updating vim help tags..."
  /usr/bin/vim --noplugins -u NONE -U NONE \
    --cmd ":helptags /usr/share/vim/vimfiles/doc" --cmd ":q" > /dev/null 2>&1
  echo "done."
  printf "$textobj\n"
}

post_upgrade() {
  post_install
}

post_remove() {
  echo -n "Updating vim help tags..."
  /usr/bin/vim --noplugins -u NONE -U NONE \
    --cmd ":helptags /usr/share/vim/vimfiles/doc" --cmd ":q" > /dev/null 2>&1
  echo "done."
}

read -d '' textobj <<'EOF'

  # vim-textobj-entire

  vim-textobj-entire is a Vim plugin to provide text objects (ae and ie
  by default) to select the entire content of a buffer. Though these
  are trivial operations (e.g. ggVG), text object versions are more
  handy, because you do not have to be conscious of the cursor position
  (e.g. vae).

  vim-textobj-entire provides two text objects:

  - ae targets the entire content of the current buffer.
  - ie is similar to ae, but ie does not include leading and trailing
    empty lines. ie is handy for some situations. For example,
    - Paste some text into a new buffer (<C-w>n"*P) -- note that the
      initial empty line is left as the last line.
    - Edit the text (:%s/foo/bar/g etc)
    - Then copy the resulting text to another application ("*yie)

EOF

op=$1
shift

$op $*
